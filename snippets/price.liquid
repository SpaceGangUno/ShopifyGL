{% comment %}
  Renders a list of product's price (regular, sale) and available sizes for last piece items

  Accepts:
  - product: {Object} Product Liquid object (optional)
  - placeholder: {Boolean} Renders a placeholder price (optional)
  - use_variant: {Boolean} Renders selected or first variant price instead of overall product pricing (optional)
  - show_badges: {Boolean} Renders 'Sale' and 'Sold Out' tags if the product matches the condition (optional)
  - price_class: {String} Adds a price class to the price element (optional)
  - show_compare_at_price: {Boolean} Renders the compare at price if the product matches the condition (optional)

  Usage:
  {% render 'price', product: product %}
{% endcomment %}

{%- liquid
  if use_variant
    assign target = product.selected_or_first_available_variant
  elsif placeholder
    assign target = null
  else
    assign target = product
  endif

  assign compare_at_price = target.compare_at_price
  assign price = target.price | default: 1999
  assign original_price = price
  assign is_black_friday = false

  # Check if product is in Custom Black Friday collection
  for collection in product.collections
    if collection.title == 'Custom Black Friday'
      assign is_black_friday = true
      break
    endif
  endfor

  # If it's in Black Friday collection and no compare price is set, calculate it
  if is_black_friday
    if compare_at_price == nil or compare_at_price <= price
      assign compare_at_price = price
      assign price = price | times: 0.6 | round
    endif
  endif

  assign price_min = product.price_min
  assign price_max = product.price_max
  assign available = target.available | default: false
  assign money_price = price | money
  assign money_price_min = price_min | money
  assign money_price_max = price_max | money
  if settings.currency_code_enabled
    assign money_price = price | money_with_currency
    assign money_price_min = price_min | money_with_currency
    assign money_price_max = price_max | money_with_currency
  endif

  if target == product and product.price_varies
    assign money_price = 'products.product.price.from_price_html' | t: price: money_price
  endif

  # Calculate discount percentage
  assign discount_percentage = 0
  if compare_at_price > price
    assign discount_percentage = compare_at_price | minus: price | times: 100.0 | divided_by: compare_at_price | round
  endif
-%}

{%- unless target == null and placeholder == null -%}
  <div
    class="
      price
      {%- if price_class %} {{ price_class }}{% endif -%}
      {%- if available == false %} price--sold-out{% endif -%}
      {%- if compare_at_price > price or is_black_friday %} price--on-sale{% endif -%}
      {%- if product.price_varies == false and product.compare_at_price_varies %} price--no-compare{% endif -%}
      {%- if show_badges %} price--show-badge{% endif -%}
    "
  >
    <div class="price__container">
      <div class="price__regular">
        <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
        <span class="price-item price-item--regular">
          {%- if compare_at_price > price or is_black_friday -%}
            <s class="price-item price-item--regular">{{ compare_at_price | money }}</s>
            <span class="price-item price-item--sale">{{ money_price }}</span>
            <span class="price-item__discount-badge">{{ discount_percentage }}% OFF</span>
          {%- else -%}
            {{ money_price }}
          {%- endif -%}
        </span>
      </div>

      {% if product.tags contains 'Last Piece' %}
        <div class="last-piece-info">
          <div class="last-piece-tag">Last Piece</div>
          <div class="available-sizes">
            Available in: 
            {% assign has_sizes = false %}
            {% for variant in product.variants %}
              {% if variant.inventory_quantity > 0 %}
                {% assign has_sizes = true %}
                <span class="size-badge">{{ variant.option1 }}</span>
              {% endif %}
            {% endfor %}
            {% unless has_sizes %}
              <span class="size-badge">No sizes available</span>
            {% endunless %}
          </div>
        </div>
      {% endif %}
    </div>
  </div>
{% endunless %}
